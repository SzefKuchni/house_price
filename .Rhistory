install.packages(c("Rcpp", "dplyr"))
library(dplyr)
a<-c(1,2,3)
b<-c("A","B","C")
data<-data.frame(a,b)
data
data %>% filter(b=="A")
q()
for (i in cor_result$Variable) {
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))
plot(p)
}
train<-read.csv("C://Users/T540pDLEWYNBQ/Desktop/Kaggle - house price/train.csv")
source("C://Users/T540pDLEWYNBQ/Desktop/R/feature_analysis.R")
train_div<-var_analysis(train, "Id")
source("C://Users/T540pDLEWYNBQ/Desktop/R/isNA.R")
isNA(train)
library(caret)
measure_statistics<-nearZeroVar(train, saveMetrics = TRUE)
measure_statistics$Variable<-row.names(measure_statistics)
measure_statistics<-merge(measure_statistics, isNA(train), by="Variable")
measure_statistics<-merge(measure_statistics, train_div$class, by="Variable")
measure_statistics
source("C://Users/T540pDLEWYNBQ/Desktop/R/cor_with.R")
cor_result<-cor_with(train_div$numeric, "SalePrice")
source("C://Users/T540pDLEWYNBQ/Desktop/R/outliers_num.R")
outliers_num(train_div$numeric)
library(ggplot2)
for (i in cor_result$Variable) {
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))
plot(p)
}
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))
plot(p)
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_line(h=2.5)
plot(p)
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = 2.5)
plot(p)
outliers_num_result<-outliers_num(train_div$numeric)
i
outliers_num_result$Variable
outliers_num_result$Variable==i
outliers_num_result[outliers_num_result$Variable==i, "high_outlier"]
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "high_outlier"], col="red")
plot(p)
for (i in cor_result$Variable) {
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "high_outlier"], col="red")
plot(p)
}
source("C://Users/T540pDLEWYNBQ/Desktop/R/outliers_num.R")
outliers_num_result<-outliers_num(train_div$numeric)
for (i in cor_result$Variable) {
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "high_outlier"], col="red")
plot(p)
}
for (i in cor_result$Variable) {
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "high_outlier"], col="red")+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "low_outlier"], col="red")
plot(p)
}
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "high_outlier"], col="red")+
geom_hline(yintercept = outliers_num_result[outliers_num_result$Variable=="SalesPrice", "high_outlier"], col="red")
plot(p)
outliers_num_result$Variable=="SalesPrice"
outliers_num_result$Variable=="SalePrice"
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "high_outlier"], col="red")+
geom_hline(yintercept = outliers_num_result[outliers_num_result$Variable=="SalePrice", "high_outlier"], col="red")
plot(p)
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "high_outlier"], col="red")+
geom_hline(yintercept = outliers_num_result[outliers_num_result$Variable=="SalePrice", "high_outlier"], col="red")
plot(p)
for (i in cor_result$Variable) {
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "high_outlier"], col="red")+
geom_hline(yintercept = outliers_num_result[outliers_num_result$Variable=="SalePrice", "high_outlier"], col="red")
plot(p)
}
for (i in cor_result$Variable[1:4]) {
p<-ggplot()+
geom_point(data=train, aes_string(y="SalePrice", x=i))+
geom_vline(xintercept = outliers_num_result[outliers_num_result$Variable==i, "high_outlier"], col="red")+
geom_hline(yintercept = outliers_num_result[outliers_num_result$Variable=="SalePrice", "high_outlier"], col="red")
plot(p)
}
train_div$other
names(train_div$other)
p<-ggplot()+
geom_boxplot(aes_string(x=i, y="SalePrice"))
plot(p)
for (i in names(train_div$other)[1:4]) {
p<-ggplot()+
geom_boxplot(aes_string(x=i, y="SalePrice"))
plot(p)
}
for (i in names(train_div$other)[1:4]) {
}
i
p<-ggplot()+
geom_boxplot(data=train, aes_string(x=i, y="SalePrice"))
plot(p)
for (i in names(train_div$other)[1:4]) {
p<-ggplot()+
geom_boxplot(data=train, aes_string(x=i, y="SalePrice"))
plot(p)
}
for (i in names(train_div$other)) {
p<-ggplot()+
geom_boxplot(data=train, aes_string(x=i, y="SalePrice"))
plot(p)
}
names(train_div$other)[1]
p<-ggplot()+
geom_boxplot(data=train, aes_string(x=i, y="SalePrice"))
plot(p)
for (i in names(train_div$other)[1]) {
p<-ggplot()+
geom_boxplot(data=train, aes_string(x=i, y="SalePrice"))
plot(p)
}
p<-ggplot()+
geom_violin(data=train, aes_string(x=i, y="SalePrice"))
plot(p)
p<-ggplot()+
geom_boxplot(data=train, aes_string(x=i, y="SalePrice"))+
geom_violin(data=train, aes_string(x=i, y="SalePrice"))
plot(p)
p<-ggplot()+
geom_boxplot(data=train, aes_string(x=i, y="SalePrice"))+
geom_violin(data=train, aes_string(x=i, y="SalePrice"), alpha=0.2)
plot(p)
p<-ggplot()+
geom_boxplot(data=train, aes_string(x=i, y="SalePrice"))+
geom_violin(data=train, aes_string(x=i, y="SalePrice"), alpha=0)
plot(p)
annova
train_div$other
names(train_div$other)
names(train_div$other)[1]
fit <- aov(SalePrice ~ MSZoning, data=train)
fit
fit <- lm(SalePrice ~ MSZoning, data=train)
anova(fit)
plot(fit)
fit <- aov(SalePrice ~ MSZoning, data=train)
anova(fit)
plot(fit)
fit$coefficients
fit$effects
fit$qr
fit$df.residual
fit$contrasts
fit$xlevels
fit$call
fit$terms
fit$model
fit
fit <- aov(SalePrice ~ MSZoning, data=train)
fit
anova(fit)
fit <- lm(SalePrice ~ MSZoning, data=train)
anova(fit)
fit<-anova(fit)
fit$`Pr(>F)`
fit
fit$`Pr(>F)`
fit$`Pr(>F)`[1]
fit$`Pr(>F)`[1]<0.05
names(train_div$other)
for (i in names(train_div$other)) {
}
i
lm(SalePrice ~ i, data=train)
paste("SalePrice~",i,sep = "")
as.formula(paste("SalePrice~",i,sep = ""))
fit <- lm(formula = as.formula(paste("SalePrice~",i,sep = "")), data=train)
fit<-anova(fit)
diff_means<-fit$`Pr(>F)`[1]<0.05
diff_means
result<-data.frame()
for (i in names(train_div$other)) {
fit <- lm(formula = as.formula(paste("SalePrice~",i,sep = "")), data=train)
fit<-anova(fit)
diff_means<-fit$`Pr(>F)`[1]<0.05
result<-rbind(result, data.frame("Variable"=i, diff_means))
}
View(result)
p<-ggplot()+
geom_boxplot(data=train, aes_string(x="MiscFeature", y="SalePrice"))+
geom_violin(data=train, aes_string(x="MiscFeature", y="SalePrice"), alpha=0)
p
p<-ggplot()+
geom_boxplot(data=train, aes_string(x="PoolQC", y="SalePrice"))+
geom_violin(data=train, aes_string(x="PoolQC", y="SalePrice"), alpha=0)
p
p<-ggplot()+
geom_boxplot(data=train, aes_string(x="MSZoning", y="SalePrice"))+
geom_violin(data=train, aes_string(x="MSZoning", y="SalePrice"), alpha=0)
p
p<-ggplot()+
geom_boxplot(data=train, aes_string(x="Street", y="SalePrice"))+
geom_violin(data=train, aes_string(x="Street", y="SalePrice"), alpha=0)
p
fit <- lm(SalePrice ~ Street, data=train)
fit
fit<-anova(fit)
fit
diff_means<-fit$`Pr(>F)`[1]<0.05
diff_means
fit<-anova(fit)
fit
mean(train$SaleType[train$Street=="Grvl"])
mean(train$SaleType[train$Street=="Grvl"], na.rm=T)
train$Street=="Grvl"
train$SaleType[train$Street=="Grvl"]
mean(train$SalePrice[train$Street=="Grvl"], na.rm=T)
mean(train$SalePrice[train$Street=="Pave"], na.rm=T)
train$SalePrice[train$Street=="Grvl"]
train$SalePrice[train$Street=="Pave"]
m1<-mean(train$SalePrice[train$Street=="Grvl"], na.rm=T)
m2<-mean(train$SalePrice[train$Street=="Pave"], na.rm=T)
m1-m2
m2-m1
length(m1)
m1_mean<-mean(train$SalePrice[train$Street=="Grvl"], na.rm=T)
m2_mean<-mean(train$SalePrice[train$Street=="Pave"], na.rm=T)
m1<-train$SalePrice[train$Street=="Grvl"]
m2<-train$SalePrice[train$Street=="Pave"]
length(m1)
var(m1)
m1
(m2_mean-m1_mean)/sqrt(var(m1)/length(m1)+var(m2)/length(m2))
fit <- lm(SalePrice ~ Street, data=train)
fit<-anova(fit)
fit
(m2_mean-m1_mean)/sqrt(var(m1)/length(m1)+var(m2)/length(m2))
source("helper_functions/sample_ec.R")
source("C://Users/T540pDLEWYNBQ/Desktop/house_price/helper_functions/sample_ec.R")
source("helper_functions/explore_feature_div.R")
train_div<-feature_div(train, "Id")
source("C://Users/T540pDLEWYNBQ/Desktop/house_price/helper_functions/sample_ec.R")
source("helper_functions/explore_feature_div.R")
train_div<-feature_div(train, "Id")
train_div$class
source("helper_functions/explore_cor_with.R")
correlation<-cor_with(data = train_div$numeric, measure_to_check_cor_with = "SalePrice")
source("helper_functions/explore_isNA.R")
missing<-isNA(data = train)
source("helper_functions/explore_outliers_num.R")
outliers<-outliers_num(data = train_div$numeric)
#plotting - takes as argument train and test sets combined with a column
#saying whether it is train ir test named origin
library(ggplot2)
#univariate analysis
#numerical variables
plot_uni_num <- function(data_with_num_var, data_to_plot_with) {
for (i in names(data_with_num_var)) {
p<-ggplot(data = data_to_plot_with)+
geom_histogram(aes_string(x=i, fill="origin"), position = "dodge")+
ggtitle(paste("Histogram of ", i, sep = ""))
name<-paste("uni_num_",i,".png", sep="")
full_path<-paste("plots/",name, sep="")
png(full_path)
print(p)
dev.off()
}
}
#plot_uni_num(data_with_num_var = train_div$numeric, data_to_plot_with = combi)
source("helper_functions/explore_plots_uni_num.R")
test$SalePrice<-NA
combi<-rbind(train, test)
plot_uni_num(data_with_num_var = train_div$numeric, data_to_plot_with = combi)
train_div$numeric
plot_uni_num(data_with_num_var = train_div$numeric, data_to_plot_with = combi)
combi$origin<-ifelse(is.na(combi$SalePrice), "test", "train")
plot_uni_num(data_with_num_var = train_div$numeric, data_to_plot_with = combi)
source("helper_functions/explore_plots_uni_cat.R")
plot_uni_cat(data_with_cat_var = train_div$other, data_to_plot_with = combi)
source("helper_functions/explore_plots_bi_num.R")
name<-paste("bi_num_",i,".png", sep = "")
name
for (i in names(data_cat)) {
}
data_num = train_div$other
for (i in names(data_cat)) {
}
data_cat = train_div$other
names(data_cat)
for (i in names(data_cat)) {
}
name<-paste("bi_num_",i,".png", sep = "")
name
full_path<-paste("plots/",name, sep="")
full_path
p<-ggplot()+
geom_boxplot(aes_string(x = i, y = "SalePrice"))
p
p<-ggplot(data = data_cat)+
geom_boxplot(aes_string(x = i, y = "SalePrice"))
p
y_variable = "SalePrice"
train[y_variable]
data<-cbind(data_cat, train[y_variable])
p<-ggplot(data = data)+
geom_boxplot(aes_string(x = i, y = "SalePrice"))
p
p
p<-ggplot(data = data)+
geom_boxplot(aes_string(x = i, y = "SalePrice"))
p
print(p)
plot(cars)
plot(air)
plot(mtcars)
plot(mtcars)
print(p)
p
geom_violin(aes_string(x = i, y = "SalePrice"))
p<-ggplot(data = data)+
library(ggplot2)
library(ggplot2)
geom_violin(aes_string(x = i, y = "SalePrice"))
p<-ggplot(data = data)+
geom_boxplot(aes_string(x = i, y = "SalePrice"))+
geom_violin(aes_string(x = i, y = "SalePrice"))
p
p<-ggplot(data = data)+
geom_boxplot(aes_string(x = i, y = "SalePrice"))+
geom_violin(aes_string(x = i, y = "SalePrice"), alpha=0)
p
plots_bi_num(data_num = train_div$numeric, y_variable = "SalePrice")
source("helper_functions/explore_plots_bi_cat.R")
plots_bi_cat(data_cat = train_div$other, y_variable = "SalePrice")
source("helper_functions/explore_plots_bi_cat.R")
plots_bi_cat(data_cat = train_div$other, y_variable = "SalePrice")
i
train[i]
table(train[i])
table(test[i])
table(train[i])-table(test[i])
table(train[i])
table(test[i])
(table(train[i])-table(test[i]))/table(train[i])
round((table(train[i])-table(test[i]))/table(train[i]),2)
x<-round((table(train[i])-table(test[i]))/table(train[i]),2)
plot(x)
x<-round((table(train[i])-table(test[i]))/table(train[i]),2)
x
library(reshape2)
melt(x)
p<-ggplot(data = data_to_plot_with)+
geom_histogram(aes_string(x=i, fill="origin"), position = "dodge")+
ggtitle(paste("Histogram of ", i, sep = ""))
data_to_plot_with = combi
data_with_num_var = train_div$numeric
for (i in names(data_with_num_var)) {
}
i
for (i in names(data_with_num_var)[1]) {
}
i
p<-ggplot(data = data_to_plot_with)+
geom_histogram(aes_string(x=i, fill="origin"), position = "dodge")+
ggtitle(paste("Histogram of ", i, sep = ""))
p
x<-round((table(train[i])-table(test[i]))/table(train[i]),2)
table(train[i])
((table(train[i])-table(test[i]))
(table(train[i])-table(test[i]))
(table(train[i])-table(test[i]))
(table(train[i])-table(test[i]))
(table(train[i])-table(test[i]))
(table(train[i])-table(test[i]))
)
library(ggplot2)
x<-round((table(train[i])-table(test[i]))/table(train[i]),2)
library(reshape2)
x<-melt(x)
data_to_plot_with = train
data_with_cat_var = train_div$other
p<-ggplot(data = data_to_plot_with)+
geom_bar(aes_string(x=i, fill="origin"), stat = "count", position = "dodge")+
ggtitle("Count in clases")
p
data_to_plot_with = combi
p<-ggplot(data = data_to_plot_with)+
geom_bar(aes_string(x=i, fill="origin"), stat = "count", position = "dodge")+
ggtitle("Count in clases")
p
for (i in names(data_with_cat_var)) {
}
i
p<-ggplot(data = data_to_plot_with)+
geom_bar(aes_string(x=i, fill="origin"), stat = "count", position = "dodge")+
ggtitle("Count in clases")
p
x<-round((table(train[i])-table(test[i]))/table(train[i]),2)
library(reshape2)
x<-melt(x)
x
p2<-ggplot(data = x)+
geom_bar(aes(x = Var1, y = value))
p2
p2<-ggplot(data = x)+
geom_bar(aes(x = Var1, y = value), stat = "identity")
p2
x
source("helper_functions/multiplot.R")
print(multiplot(p1,p2))
p1<-ggplot(data = data_to_plot_with)+
geom_bar(aes_string(x=i, fill="origin"), stat = "count", position = "dodge")+
ggtitle("Count in clases")
print(multiplot(p1,p2))
p1<-ggplot(data = data_to_plot_with)+
geom_bar(aes_string(x=i, fill="origin"), stat = "count", position = "dodge")+
ggtitle("Count in clases")+ theme(legend.position="none")
p2<-ggplot(data = x)+
geom_bar(aes(x = Var1, y = value), stat = "identity")
print(multiplot(p1,p2))
p1<-ggplot(data = data_to_plot_with)+
geom_bar(aes_string(x=i, fill="origin"), stat = "count", position = "dodge")+
ggtitle("Count in clases")+ theme(legend.position="bottom")
p2<-ggplot(data = x)+
geom_bar(aes(x = Var1, y = value), stat = "identity")
name<-paste("uni_cat_",i,".png", sep="")
full_path<-paste("plots/",name, sep="")
#png(full_path)
print(multiplot(p1,p2))
p1<-ggplot(data = data_to_plot_with)+
geom_bar(aes_string(x=i, fill="origin"), stat = "count", position = "dodge")+
ggtitle("Count in clases")+ theme(legend.position="bottom")
p2<-ggplot(data = x)+
geom_bar(aes(x = Var1, y = value), stat = "identity")
name<-paste("uni_cat_",i,".png", sep="")
full_path<-paste("plots/",name, sep="")
#png(full_path)
print(multiplot(p1,p2, layout = matrix(c(1,2,2), nrow=3, byrow=TRUE)))
p1<-ggplot(data = data_to_plot_with)+
geom_bar(aes_string(x=i, fill="origin"), stat = "count", position = "dodge")+
ggtitle("Count in clases")+ theme(legend.position="bottom")
p2<-ggplot(data = x)+
geom_bar(aes(x = Var1, y = value), stat = "identity")
name<-paste("uni_cat_",i,".png", sep="")
full_path<-paste("plots/",name, sep="")
#png(full_path)
print(multiplot(p1,p2, layout = matrix(c(1,1,2), nrow=3, byrow=TRUE)))
p2<-ggplot(data = x)+
geom_bar(aes(x = Var1, y = value), stat = "identity")+
ylab("difference between datasets")
print(multiplot(p1,p2, layout = matrix(c(1,1,2), nrow=3, byrow=TRUE)))
p2<-ggplot(data = x)+
geom_bar(aes(x = Var1, y = value), stat = "identity")+
ggtitle("difference between datasets")
print(multiplot(p1,p2, layout = matrix(c(1,1,2), nrow=3, byrow=TRUE)))
source("helper_functions/explore_plots_uni_cat.R")
print(multiplot(p1,p2, layout = matrix(c(1,1,2), nrow=3, byrow=TRUE)))
source("helper_functions/explore_plots_uni_cat.R")
plot_uni_cat(data_with_cat_var = train_div$other, data_to_plot_with = combi)
for (i in names(data_with_cat_var)[6]) {
}
x<-round((table(train[i])-table(test[i]))/table(train[i]),2)
table(train[i])
table(test[i])
ncol(table(train[i]))
length(table(train[i]))
table(train[i])
length(table(train[i]))==length(table(test[i]))
x<-if (length(table(train[i]))==length(table(test[i]))) {
x<-melt(round((table(train[i])-table(test[i]))/table(train[i]),2))
} else {
x<-NA
}
p1<-ggplot(data = data_to_plot_with)+
geom_bar(aes_string(x=i, fill="origin"), stat = "count", position = "dodge")+
ggtitle("Count in clases")+ theme(legend.position="bottom")
p2<-ggplot(data = x)+
geom_bar(aes(x = Var1, y = value), stat = "identity")+
ggtitle("realtive difference between datasets")
p2<-ggplot()
p2
source("helper_functions/explore_plots_uni_cat.R")
plot_uni_cat(data_with_cat_var = train_div$other, data_to_plot_with = combi)
plot_uni_cat(data_with_cat_var = train_div$other, data_to_plot_with = combi)
source("helper_functions/explore_plots_uni_cat.R")
plot_uni_cat(data_with_cat_var = train_div$other, data_to_plot_with = combi)
print(multiplot(p1,p2, layout = matrix(c(1,1,2), nrow=3, byrow=TRUE)))
png(full_path, width = 1000, height = 1000)
print(multiplot(p1,p2, layout = matrix(c(1,1,2), nrow=3, byrow=TRUE)))
dev.off()
full_path
source("helper_functions/explore_plots_uni_cat.R")
plot_uni_cat(data_with_cat_var = train_div$other, data_to_plot_with = combi)
